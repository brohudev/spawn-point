import os

def generate_script(os_type, proj_type, ci_option, deploy_option):
     """Generate a Python script based on the provided parameters."""
     # Map abbreviated OS to full name
     os_map = {
          'lin': 'linux',
          'mac': 'macos',
          'wind': 'windows'
     }
     
     os_full = os_map.get(os_type, 'linux')
     frag_dir = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'fragments')
     
     # Assemble the script from fragments
     script = "#!/usr/bin/env python3\n"
     script += f"# Generated by Spawnpoint for {os_full}/{proj_type}\n"
     script += f"# CI: {ci_option}, Deploy: {deploy_option}\n\n"
     
     # Add imports and common setup
     script += "import os\nimport sys\nimport argparse\n\n"
     
     # Add OS verification fragment
     script += load_fragment(frag_dir, 'os', f"{os_full}_check")
     
     # Start main function
     script += "\ndef main():\n"
     script += f"    print(\"Setting up {proj_type}end project for {os_full}\")\n"
     
     # Add OS verification call
     if os_full == 'linux':
          script += "    if not verify_linux():\n"
          script += "        print(\"Continuing anyway...\")\n\n"
     
     # Add project setup fragment
     script += "    # Project setup\n"
     project_setup = load_fragment(frag_dir, 'project', f"{proj_type}_setup")
     script += project_setup.replace('\n', '\n    ')
     
     # Add CI setup if needed
     if ci_option != 'none':
          script += "\n    # CI setup\n"
          ci_setup = load_fragment(frag_dir, 'ci', f"{ci_option}_setup")
          script += ci_setup.replace('\n', '\n    ')
     
     # Add deployment setup if needed
     if deploy_option != 'none':
          script += "\n    # Deployment setup\n"
          deploy_setup = load_fragment(frag_dir, 'deploy', f"{deploy_option}_setup")
          script += deploy_setup.replace('\n', '\n    ')
     
     script += "\n    print(\"Setup complete!\")\n\n"
     
     # Add script entrypoint
     script += "if __name__ == \"__main__\":\n"
     script += "    parser = argparse.ArgumentParser(description='Project setup script')\n"
     script += f"    parser.add_argument('--ci', default='{ci_option}', help='CI option')\n"
     script += f"    parser.add_argument('--deploy', default='{deploy_option}', help='Deployment option')\n"
     script += "    args = parser.parse_args()\n"
     script += "    main()\n"
     
     return script




def load_fragment(fragments_dir, fragment_type, name):
     """Load a fragment file if it exists, return empty string if not."""
     fragment_path = os.path.join(fragments_dir, fragment_type, f"{name}.py")
     try:
          if os.path.exists(fragment_path):
               with open(fragment_path, 'r') as f:
                    return f.read()
          return f"# {name} fragment not found\nprint(\"Fragment {name} not found\")\n"
     except Exception as e:
          print(f"Error loading fragment {name}: {str(e)}")
          return f"# Error loading {name} fragment\nprint(\"Error loading fragment {name}\")\n"
